
###### PCA ON FROG DATA


##### Cleaning the data#######
#importing raw data
d <- read.csv("Froggytox.csv", stringsAsFactors = FALSE)

#check structure to ensure data is in numerical format
str(d)

#Remove any rows with missing data
d.omit<-na.omit(d)
d.omit


#######Computing PCA using prcomp#########

#Computing pca using prcomp (excluding binomial gender data)
#Only including numerical collums
pca.froggy<-prcomp(t(d.omit[,-c(1,3,4,7)]), scale=TRUE)
pca.froggy

#Making Scree plots to display the data
#first square the standard deviation of the pca
pca.var.froggy <- pca.froggy$sdev^2
#Convert the squared standard deviation into a percent
pca.var.froggy.per <- round(pca.var.froggy/sum(pca.var.froggy)*100, 1)
pca.var.froggy.per
#plot the percent
barplot(pca.var.froggy.per, main="Scree Plotof Frog Varience without Gender", xlab="Principal Component", ylab="Percent Variation")


#Computing pca using prcomp method (including binomial gender data)

#first gender data must be numeric. Lets make gender numerical!
#creating numeric frog sex vector
frogsex<-as.numeric(d.omit$frogsex)
#join vector to dataframe
d.omit.plus<-cbind(d.omit, frogsex)
#Run pca on data removing non numeric colums
pca.froggy.gen<-prcomp(t(d.omit[,-c(1,3,4,7)]))

#making scree plot with gender
#Squring the standard deviation of the pca
pca.var.froggy.gen <- pca.froggy.gen$sdev^2
#Converting into percentage
pca.var.froggy.gen.per<- round(pca.var.froggy.gen/sum(pca.var.froggy.gen)*100, 1)
pca.var.froggy.gen.per
#Plotting as barplot
barplot(pca.var.froggy.gen.per, main="Scree Plot of Frog Varience with Gender", xlab="Principal Component", ylab="Percent Variation")

########Computing pca using PCA method (as seen in FactoMineR and factoextra packages)#########

#Installing and loading library
install.packages("FactoMineR")
install.packages("factoextra")
library("FactoMineR")
library("factoextra")

#Calculating with Binomial Gender Values
#Computing pca with gender(Note PCA instead of prcomp)
pca.gender<-PCA(d.omit.plus[,-c(1,3,4,7)], scale.unit = TRUE, ncp = 5, graph = TRUE)
pca.gender
#Calculating eigenvalues
eig.val <- get_eigenvalue(pca.gender)
eig.val
#making a scree plot
fviz_eig(pca.gender, addlabels = TRUE, ylim = c(0, 50))

#Calculating wihtout Gender
#Computing pca
pca.nogender<-PCA(d.omit[,-c(1,3,4,7)], scale.unit = TRUE, ncp = 5, graph = TRUE)
pca.nogender
#getting eigenvalues
eig.val.nogender<- get_eigenvalue(pca.nogender)
eig.val.nogender
#scree plot
fviz_eig(pca.nogender, addlabels = TRUE, ylim = c(0, 50))


#Calculating Variation Values


#Variation with gender
var <- get_pca_var(pca.gender)
var

#variation without gender
var.nogender <- get_pca_var(pca.nogender)
var.nogender

#########Visually displaying the data########

#Percent Contribution Graphs

#Plotting the contribution of each variable with gender
fviz_contrib(pca.gender, choice = "var", axes = 1:2, title ="Contribution of Variables")
#Plotting the contrbution of each variable without gender
fviz_contrib(pca.nogender, choice = "var", axes = 1:2, title = "contribution of Variables", file= paste(working.dir,"/",output.folders[3], "/", sep=""))


#Two Dimensional PCA Graphs

#plot the pca (no gender) using two dimensions
fviz_pca_ind(pca.nogender, col.ind = "cos2", 
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE 
)
#plot the pca (gender) using two dimensions
fviz_pca_ind(pca.gender, col.ind = "cos2", 
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE 
)


#PCA Biplots

#making pca biplots (without gender)
fviz_pca_biplot(pca.nogender, repel = TRUE,
                col.var = "#2E9FDF", # Variables color
                col.ind = "#696969"  # Individuals color
)
#making pca biplots (with gender)
fviz_pca_biplot(pca.gender, repel = TRUE,
                nkn k d = "#696969"  # Individuals color
              
  
                
                
                
                
                



                

#Still need to create file links and create function to generate graphs
#Want to redo analysis considering scaled pca data(z scores) and unscaled data

# will repeat similar script for linear Discriminant function analysis

#######end of script
                              
           
