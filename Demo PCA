
#generate random numbers
a <- c(0,1,2,3,4,5,6,7,8,9,19)
a
#generate related numbers
b<-rnorm(100,0,100)
b
#plot relationship
plot(a,b)
#create data frame
a.b<-data.frame(a,b)
a.b

#generate random numbers
x <- rnorm(100,3,6)
#generate unrelated numbers
y <-rnorm(100,6,3)
#plot relationship
plot(x,y)
#create data frame
x.y<-data.frame(x,y)
x.y

#creating pca a.b
pca.a.b <- prcomp(t(a.b), scale=TRUE)
#plotting pca a.b
plot(pca.a.b$x[,1], pca.a.b$x[,2])

#creating pca x.y
pca.x.y<- prcomp(t(x.y), scale=TRUE)
#plotting pca x.y
plot(pca.x.y$x[,1], pca.x.y$x[,2])

#running pca with a,b,x and y
a.b.x.y<-data.frame(a,b,x,y)
pca.a.b.x.y<- prcomp(t(a.b.x.y), scale=TRUE)
plot(pca.a.b.x.y$x[,1], pca.a.b.x.y$x[,2])
#note there are now four data points instead of 2

#making a scree plot a.b
pca.var.a.b <- pca.a.b$sdev^2
pca.var.a.b.per <- round(pca.var.a.b/sum(pca.var.a.b)*100, 1)
pca.var.a.b.per
barplot(pca.var.a.b.per, main="Scree Plot", xlab="Principal Component", ylab="Percent Variation")

#making a scree plot x.y
pca.var.x.y <- pca.x.y$sdev^2
pca.var.x.y.per <- round(pca.var.x.y/sum(pca.var.x.y)*100, 1)
barplot(pca.var.x.y.per,main="Scree Plt XY", xlab="Principal Componenet", ylab = "Percent Variation")

#Making a scree plot a.b.x.y
pca.var.a.b.x.y <- pca.a.b.x.y$sdev^2
pca.var.a.b.x.y.per<- round(pca.var.a.b.x.y/sum(pca.var.a.b.x.y)*100,1)
barplot(pca.var.a.b.x.y.per, main = "Scree Plot ABXY",)

#ggplots!!
library(ggplot2)


pca.data <- data.frame(Sample=rownames(pca.a.b.x.y$x),
                       X=pca.a.b.x.y$x[,1],
                       Y=pca.a.b.x.y$x[,2])
pca.data

ggplot(data=pca.data, aes(x=X, y=Y, label=Sample)) +
  geom_text() +
  xlab(paste("PC1 - ", pca.var.a.b.x.y.per[1], "%", sep="")) +
  ylab(paste("PC2 - ", pca.var.a.b.x.y.per[2], "%", sep="")) +
  theme_bw() +
  ggtitle("My PCA Graph")

## get the name of the top 10 measurements (genes) that contribute
## most to pc1.
loading_scores <- pca.a.b.x.y$rotation[,1]
a.b.x.y_scores <- abs(loading_scores) ## get the magnitudes
a.b.x.y_score_ranked <- sort(a.b.x.y_scores, decreasing=TRUE)
a.b.x.y_score_ranked
a.b.x.y_score_ranked1 <- names(a.b.x.y_score_ranked[1:10])
a.b.x.y_score_ranked1
